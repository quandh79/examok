// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRACTICAL_EXAM_NET.Entities;

#nullable disable

namespace PRACTICAL_EXAM_NET.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230526124305_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRACTICAL_EXAM_NET.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("classes");
                });

            modelBuilder.Entity("PRACTICAL_EXAM_NET.Entities.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ExamDuration")
                        .HasColumnType("time");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.ToTable("exams");
                });

            modelBuilder.Entity("PRACTICAL_EXAM_NET.Entities.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("faculty");
                });

            modelBuilder.Entity("PRACTICAL_EXAM_NET.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("subject");
                });

            modelBuilder.Entity("PRACTICAL_EXAM_NET.Entities.Class", b =>
                {
                    b.HasOne("PRACTICAL_EXAM_NET.Entities.Exam", null)
                        .WithMany("classes")
                        .HasForeignKey("ExamId");
                });

            modelBuilder.Entity("PRACTICAL_EXAM_NET.Entities.Faculty", b =>
                {
                    b.HasOne("PRACTICAL_EXAM_NET.Entities.Exam", null)
                        .WithMany("faculty")
                        .HasForeignKey("ExamId");
                });

            modelBuilder.Entity("PRACTICAL_EXAM_NET.Entities.Subject", b =>
                {
                    b.HasOne("PRACTICAL_EXAM_NET.Entities.Exam", null)
                        .WithMany("subjects")
                        .HasForeignKey("ExamId");
                });

            modelBuilder.Entity("PRACTICAL_EXAM_NET.Entities.Exam", b =>
                {
                    b.Navigation("classes");

                    b.Navigation("faculty");

                    b.Navigation("subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
